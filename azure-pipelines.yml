# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'
strategy:
  matrix:
    Python36:
      python.version: '3.6'
  maxParallel: 1

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'
  - script: python -m pip install setuptools wheel flake8 requests pytest pytest-cov
    displayName: 'install setup tools'

  - script: python setup.py install
    displayName: 'install dependencies'

  - script: python setup.py sdist
    displayName: 'build package'

  - script: flake8 .
    displayName: 'Run linter'

  - script:  pytest tests --junitxml=junit/test-results.xml --cov=orca --cov-report=xml --cov-report=html

    displayName: 'Run Unit tests'

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: '**/test-*.xml'
      testRunTitle: 'Publish test results for Python $(python.version)'

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
      reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'
## - script: |
#     twine upload -r pypi -p $(password) dist/orca-version.tar.gz
#   displayName: publish package
