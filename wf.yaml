apiversion: orca/'1.0'

name: Example
description: |
      This is a test workflow.
      blah, blah....

version: '0.1'

conf:
  trace: file.txt

dependencies:
  - os
  
var:
  # define a string 
  file: 'tes'
  
  # set a string
  prop: 'streamflow'
  
  # set a numerical value
  val1: 12
  
  # access the environment
  ttt: environ['HOME']
  
  # concat a variable
  streamflow : var.prop + '_test'
  
  # compute a variable
  bb : var.val1 + 10
  
  # map the first command line argument
  url : args[1]

  # another string
  base_nwm_url: 'http://ehs-csip-nwm.eastus.azurecontainer:8080'
  
  # lambda function, must be quoted.
  func_a: "lambda x, y: x * y"
  
  threshold: int(args[2])
  
workflow:
  # (payload | service | if (| while | parallel))
  # payload and services have names, control structures have conditionals.

  - payload (start): 
      # name : value
      kind: var.streamflow
      dc: var.func_a(5 , var.bb)
      type: 'short_range'
      temp: 100
      #fcTimesToHarvest: [0]

  - service (nwm):
      csip: var.base_nwm_url + "/csip-nwm"
      params:
        kind: var.streamflow
        dc: var.func_a(5 , var.bb)
        type: 'short_range'
        temp: 100
        #fcTimesToHarvest: [0]

  - payload (ttt):
      fcTimesToHarvest: 40
      foo: _
      test: payload.start.kind + '_olaf'
      newtemp : payload.start.temp + 100.5

  - service (map1):
      file: abc.py

  #- payload (map):
      # empty values means: take the output, don't change.
      #o: 
      #station_kind: 'streamflow'
      #type: 'short_range'

  - if payload.ttt.newtemp < threshold:
      - service (nested1):
          file: map.py
          
      - payload (nested2): 
          temp: 40

  - service (next):
      url: base_nwm_url + "/csip-nwm/last"
       
  - service (last):
      url: base_nwm_url + "/csip-nwm/last"
